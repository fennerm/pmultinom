// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

// cdf_multinomial_lnP
double cdf_multinomial_lnP(const int K, const int N, Rcpp::NumericVector p, Rcpp::NumericVector n);
RcppExport SEXP _pmultinom_cdf_multinomial_lnP(SEXP KSEXP, SEXP NSEXP, SEXP pSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type K(KSEXP);
    Rcpp::traits::input_parameter< const int >::type N(NSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(cdf_multinomial_lnP(K, N, p, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pmultinom_cdf_multinomial_lnP", (DL_FUNC) &_pmultinom_cdf_multinomial_lnP, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_pmultinom(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
